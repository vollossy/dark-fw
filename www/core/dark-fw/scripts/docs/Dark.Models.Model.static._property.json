c({"name": "Dark.Models.Model.static._property", "type": "attribute", "parents": ["Dark.Models.Model.static"], "comment": "<p>Данное свойство содержит описания значении свойств класса - переданные ему в setup.</p>\n\n<p><strong>Пример</strong>:</p>\n\n<pre><code class='javascript'>_property : {\n     cType: {\n         /**\n          * @param {Object} description Описание для свойства cType\n          * @return {*}\n          */\n         get : function(description){\n             return this[description.field];\n         },\n         /**\n          * @param {Object} description Описание для свойства cType\n          * @param {*} value Устанавливаемое значение\n          * @return {Dark.Models.Model}\n          */\n         set: function(description, value){\n            this.[description.field] = value;\n            return this;\n         },\n         /**\n          * @param {Object} description Описание для свойства cType\n          * @return {Array}\n          */\n         defValue: function(description){\n            return new Array();\n         }\n     }\n}</code></pre>\n\n<p><strong>Cвойство может содержать в себе следующие настройки:</strong></p>\n\n<ul>\n<li><strong>field</strong> - имя свойства в котором физически хранится значение.</li>\n<li><strong>get</strong> - функция вызывается при попытке получить значения свойства</li>\n<li><strong>fnBeforeSet</strong> - функция вызывается перед set</li>\n<li><strong>set</strong> - функция вызывается при попытке установить новое значение в свойство</li>\n<li><strong>fnAfterSet</strong> - функция вызывается после set</li>\n<li><strong>defValue</strong> -</li>\n</ul>\n\n<p><strong>get:</strong></p>\n\n<p>Если данное свойство определено как функция то используем ее,\nесли не определено значит используем стандартную функцию getter.</p>\n\n<p><strong>!!! Функция обязательно должна возвращать хранимое значение !!!</strong></p>\n\n<pre><code class='javascript'>cType: {\n  /**\n   * @param {Object} description Описание для свойства cType\n   * @return {*}\n   */\n   get : function(description){\n      // Тело функции по умолчанию, если своство cType.get == undefined\n      return this[description.field];\n   }\n}</code></pre>\n\n<p><strong>set:</strong></p>\n\n<p>Если данное свойство определено как функция то используем ее,\nесли не определено значит используем стандартную функцию setter.</p>\n\n<p><strong>!!! Функция обязательно должна возвращать this !!!</strong></p>\n\n<pre><code class='javascript'>cType: {\n  /**\n   * @param {Object} description Описание для свойства cType\n   * @param {*} value Устанавливаемое значение\n   * @return {Dark.Models.Model}\n   */\n   set : function(description, value){\n      // Тело функции по умолчанию, если своство cType.set == undefined\n      this.[description.field] = value;\n      return this;\n   }\n}</code></pre>\n\n<p><strong>fnBeforeSet:</strong></p>\n\n<p>Вызывается перед вызовом set.\nЕсли свойство определено как функция то вызываем ее,\nиначе если не определено - используем стандартную функцию fnBeforeSet.</p>\n\n<p><strong>!!! Функция обязательно должна возвращать переданное в нее значение !!!</strong></p>\n\n<pre><code class='javascript'>cType: {\n  /**\n   * @param {Object} description Описание для свойства cType\n   * @param {*} value Устанавливаемое значение\n   * @return {*}\n   */\n   fnBeforeSet : function(description, value){\n      // Тело функции по умолчанию, если своство cType.fnBeforeSet == undefined\n      return value;\n   }\n}</code></pre>\n\n<p><strong>fnAfterSet:</strong></p>\n\n<p>Вызывается после вызова set.\nЕсли свойство определено как функция то вызываем ее,\nиначе если не определено - используем стандартную функцию fnBeforeSet.</p>\n\n<p><strong>!!! Функция обязательно должна возвращать переданное в нее значение !!!</strong></p>\n\n<pre><code class='javascript'>cType: {\n  /**\n   * @param {Object} description Описание для свойства cType\n   * @param {*} value Устанавливаемое значение\n   * @return {*}\n   */\n   fnAfterSet : function(description, value){\n      // Тело функции по умолчанию, если своство cType.fnAfterSet == undefined\n      return value;\n   }\n}</code></pre>", "description": "", "src": "dark-fw/models/model.js", "line": 469, "children": []})